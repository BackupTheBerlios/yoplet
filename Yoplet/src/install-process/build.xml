<project name="plm Installer" default="" basedir="${basedir}">
	<tstamp>
		<format property="NOW" pattern="MM/dd/yyyy hh:mm aa" />
		<format property="TODAY" pattern="yyyy-MM-dd"/>
	</tstamp>

	<property file="${basedir}/build.properties" />
	<property environment="env"/>

	<!-- FLEXLm properties -->
	<property name="license.feature.version.server" value="2006.01"/>

	<property name="ds.enterprise.jndiname" value="jdbc/enterpriseDS" />
	
	<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask">
		<classpath>
			<fileset dir="${basedir}/lib" includes="**/*.jar"/>
		</classpath>
	</taskdef>
	<xmlcatalog id="dtds">
		<classpath>
			<fileset dir="${basedir}/install/libs/core" includes="**/hibernate3.jar"/>
			<fileset dir="${env.WL_HOME}/server/lib" includes="weblogic.jar"/>
		</classpath>
		<dtd publicId="-//Hibernate/Hibernate Configuration DTD//EN" location="org/hibernate/hibernate-configuration-3.0.dtd"/>
		<dtd publicId="-//BEA Systems, Inc.//DTD WebLogic 8.1.0 EJB//EN" location="weblogic/ejb/container/dd/xml"/>
	</xmlcatalog>	

	<target name="install" depends="init,plm-console-war, lectra-conf-jar, datasource, ear, copy-packages, create-repair-kit,osformat"/>
	
	<target name="init">
		<echo>+--------------------------------------------------------------------+</echo>
		<echo>|                                                                    |</echo>
		<echo>| init                                                               |</echo>
		<echo>|                                                                    |</echo>
		<echo>+--------------------------------------------------------------------+</echo>
		<delete dir="${ear}"/>
		<echo>Preparation of EnterpriseIntegration installation : </echo>
		<echo>    + Version            : ${plm.version}</echo>
		<echo>    + Application Server : ${as_type}</echo>
		<echo>    + Database           : ${db_type}</echo>
		<echo>    + Destination        : ${install_dest}</echo>
		<echo>
		</echo>
		<condition property="jboss_type" value="true">
			<equals arg1="${as_type}" arg2="jboss"/>
		</condition>
		<condition property="weblogic_type" value="true">
			<equals arg1="${as_type}" arg2="weblogic"/>
		</condition>
		<condition property="websphere_type" value="true">
			<equals arg1="${as_type}" arg2="websphere"/>
		</condition>
		<condition property="session_factory" value="java:/hibernate/SessionFactory">
			<equals arg1="${as_type}" arg2="jboss"/>
		</condition>
		<condition property="session_factory" value="hibernate/SessionFactory">
			<not>
				<equals arg1="${as_type}" arg2="jboss"/>
			</not>
		</condition>

		<condition property="isWindowsOs">
			<and>
				<os family="windows"/>
			</and>
		</condition>
		<condition property="jdbc.dir" value="oracle">
			<equals arg1="${db_type}" arg2="oracle9"/>
		</condition>
		<condition property="jdbc.dir" value="db2">
			<equals arg1="${db_type}" arg2="db2"/>
		</condition>
		<condition property="jdbc.dir" value="mssqlserver-2005">
			<equals arg1="${db_type}" arg2="mssql"/>
		</condition>
		<fail unless="jdbc.dir" message="${db_type} is not a valid database type"/>
		<mkdir dir="${tmp}"/>
		<mkdir dir="${ear}"/>

		<path id="install.path">
			<pathelement location="${install_dest}"/>
		</path>
		<pathconvert property="install_dir_websphere" dirsep="/" refid="install.path" />

		<condition property="install_dir" value="${install_dir_websphere}">
			<equals arg1="${as_type}" arg2="websphere"/>
		</condition>

		<condition property="install_dir" value="${install_dest}">
			<not>
				<equals arg1="${as_type}" arg2="websphere"/>
			</not>
		</condition>
		<echo>${install_dir}</echo>
		<condition property="is_esc_enabled" value="true">
			<equals arg1="${esc_enable}" arg2="true"/>
		</condition>
		<condition property="monitor.start" value="">
			<equals arg1="${monitor.enable}" arg2="true"/>
		</condition>
		<condition property="monitor.start" value="&lt;!-- ">
			<not><equals arg1="${monitor.enable}" arg2="true"/></not>
		</condition>
		<condition property="monitor.end" value="">
			<equals arg1="${monitor.enable}" arg2="true"/>
		</condition>
		<condition property="monitor.end" value=" --&gt;">
			<not><equals arg1="${monitor.enable}" arg2="true"/></not>
		</condition>
		<antcall target="init-weblogic"/>
	</target>

	<target name="ear">
		<echo>+--------------------------------------------------------------------+</echo>
		<echo>|                                                                    |</echo>
		<echo>| ear                                                                |</echo>
		<echo>|                                                                    |</echo>
		<echo>+--------------------------------------------------------------------+</echo>
		<mkdir dir="${ear}"/>

		<copy todir="${ear}">
			<fileset dir="${basedir}/install/libs/core">
				<include name="*.*"/>
				<exclude name="enterpriseserver-map-*.jar"/>
				<exclude name="plm-console.jar"/>
				<exclude name="plm-console-map-*.jar"/>				
				<exclude name="enterprise-examples-cbr.zip"/>
				<exclude name="*.ear"/>
			</fileset>
			<fileset dir="${basedir}/install/libs/${as_type}">
				<include name="*.*"/>
				<exclude name="*.war"/>
			</fileset>
		</copy>

		<!-- Repackage Fade -->
		<mkdir dir="${tmp}/fade-war"/>
		<unzip src="${basedir}/install/libs/${as_type}/fade.war" dest="${tmp}/fade-war"/>
		<replace file="${tmp}/fade-war/WEB-INF/web.xml"
                 token="@version"
                 value="${license.feature.version.server}">
		</replace>
		<replace file="${tmp}/fade-war/WEB-INF/web.xml"
                 token="@path"
                 value="${license.path.server}">
		</replace>
		
		<antcall target="weblogic-fade-war"/>
		
		<zip destfile="${ear}/fade.war" basedir="${tmp}/fade-war" />

		<!-- DAT/SAT (uncomment/comment)-->
		<!-- Repackage DAT -->
		<!--
		<mkdir dir="${tmp}/dat-war"/>
		<unzip src="${basedir}/install/libs/${as_type}/DataAdminTool.war" dest="${tmp}/dat-war"/>
		<replace file="${tmp}/dat-war/WEB-INF/web.xml"
                 token="&lt;param-value&gt;admin&lt;/param-value&gt;"
                 value="&lt;param-value&gt;${plm.login}&lt;/param-value&gt;">
        </replace>
        <replace file="${tmp}/dat-war/WEB-INF/web.xml"
                 token="&lt;param-value&gt;cleandb&lt;/param-value&gt;"
                 value="&lt;param-value&gt;${plm.password}&lt;/param-value&gt;">
        </replace>
        <zip destfile="${ear}/DataAdminTool.war" basedir="${tmp}/dat-war" />
        -->

		<!-- Repackage SAT -->
		<!--
		<mkdir dir="${tmp}/sat-war"/>
		<unzip src="${basedir}/install/libs/${as_type}/SecurityAdminTool.war" dest="${tmp}/sat-war"/>
		<replace file="${tmp}/sat-war/WEB-INF/web.xml"
                 token="&lt;param-value&gt;admin&lt;/param-value&gt;"
                 value="&lt;param-value&gt;${plm.login}&lt;/param-value&gt;">
        </replace>
        <replace file="${tmp}/sat-war/WEB-INF/web.xml"
                 token="&lt;param-value&gt;cleandb&lt;/param-value&gt;"
                 value="&lt;param-value&gt;${plm.password}&lt;/param-value&gt;">
        </replace>
        <zip destfile="${ear}/SecurityAdminTool.war" basedir="${tmp}/sat-war" />
        -->

		<!-- Repackage PLMConsole Jar -->
		<mkdir dir="${tmp}/plm-console-jar"/>
		<unzip src="${basedir}/install/libs/core/plm-console.jar" dest="${tmp}/plm-console-jar"/>
		<replace file="${tmp}/plm-console-jar/META-INF/ejb-jar.xml"
                 token="@hibSessionFactoryJndiName@"
                 value="${session_factory}">
		</replace>
		<zip destfile="${ear}/plm-console.jar" basedir="${tmp}/plm-console-jar" />

		<!-- TODO: change was to websphere
		<copy file="${basedir}/install/libs/core/enterpriseserver-map-${db_type}-${as_type}.jar" tofile="${ear}/enterpriseserver-map.jar" /-->

		<mkdir dir="${ear}/META-INF"/>
		<copy todir="${ear}/META-INF">
			<fileset dir="${basedir}/install/xml/core">
				<include name="application.xml"/>
			</fileset>
		</copy>
		<manifest file="${ear}/META-INF/MANIFEST.MF">
			<section name="${ant.project.name}">
				<attribute name="Specification-Title" value="PLM Fashion Product Management" />
				<attribute name="Specification-Version" value="${plm.version}" />
				<attribute name="Implementation-Date" value="${NOW}" />
			</section>
		</manifest>

		<antcall target="ear-jboss"/>
		<antcall target="ear-websphere"/>
		<antcall target="ear-weblogic"/>
		<antcall target="ear-console"/>
		
		<zip destfile="${tmp}/pdm-${db_type}.ear" basedir="${ear}" />
	</target>


	<target name="ear-jboss" if="jboss_type" description="Perform specific action for ear target">
		
		<copy file="${basedir}/install/libs/core/enterpriseserver-map-${db_type}-jboss.jar" tofile="${ear}/enterpriseserver-map.jar" />
		<setSecondLevelCache/>
		
		<copy file="${basedir}/install/libs/core/plm-console-map-${db_type}-jboss.jar" tofile="${ear}/plm-console-map.jar" />
		
	</target>

	<target name="ear-websphere" if="websphere_type" description="Perform specific action for ear target">
		<!-- TODO: remove -->
		<copy file="${basedir}/install/libs/core/enterpriseserver-map-${db_type}-was.jar" tofile="${ear}/enterpriseserver-map.jar" />
		
		<setSecondLevelCache/>
		<setTmLookupClass from="org.hibernate.transaction.WebSphereExtendedJTATransactionLookup" to="org.hibernate.transaction.WebSphereTransactionManagerLookup"/>
		
		<copy file="${basedir}/install/libs/core/plm-console-map-${db_type}-websphere.jar" tofile="${ear}/plm-console-map.jar" />		
		
		<!-- change hilo to native -->
		<mkdir dir="${tmp}/maptemp"/>
		<unzip src="${ear}/enterpriseserver-map.jar" dest="${tmp}/maptemp"/>
		<replaceregexp match="&lt;param name=&quot;table&quot;&gt;hi_value&lt;/param&gt;"
                         replace=""
                         byline="true">
			<fileset dir="${tmp}/maptemp" includes="**/*.hbm.xml" />
		</replaceregexp>
		<replaceregexp match="&lt;param name=&quot;column&quot;&gt;next_value&lt;/param&gt;"
                         replace=""
                         byline="true">
			<fileset dir="${tmp}/maptemp" includes="**/*.hbm.xml" />
		</replaceregexp>
		<replaceregexp match="&lt;param name=&quot;max_lo&quot;&gt;0&lt;/param&gt;"
                         replace=""
                         byline="true">
			<fileset dir="${tmp}/maptemp" includes="**/*.hbm.xml" />
		</replaceregexp>
		<replaceregexp match="(&lt;generator class=&quot;)hilo(&quot;&gt;)"
                         replace="\1sequence\2"
                         byline="true">
			<fileset dir="${tmp}/maptemp" includes="**/*.hbm.xml" />
		</replaceregexp>
		<delete file="${ear}/enterpriseserver-map.jar"/>
		<jar destfile="${ear}/enterpriseserver-map.jar" >
			<fileset dir="${tmp}/maptemp">
				<include name="**/*"/>
			</fileset>
		</jar>
		<delete dir="${tmp}/maptemp"/>
	</target>

	<target name="plm-console-war" description="Build the PLMConsole Web Archive">
		<echo>+--------------------------------------------------------------------+</echo>
		<echo>|                                                                    |</echo>
		<echo>| plm-console                                                        |</echo>
		<echo>|                                                                    |</echo>
		<echo>+--------------------------------------------------------------------+</echo>
		<!-- Repackage PLMConsole -->
		<mkdir dir="${tmp}/plm-console-war"/>
		<unzip src="${basedir}/install/libs/${as_type}/plm-console.war" dest="${tmp}/plm-console-war"/>
		<replace file="${tmp}/plm-console-war/WEB-INF/web.xml"
                 token="&lt;param-value&gt;admin&lt;/param-value&gt;"
                 value="&lt;param-value&gt;${plm.login}&lt;/param-value&gt;">
		</replace>
		<replace file="${tmp}/plm-console-war/WEB-INF/web.xml"
                 token="&lt;param-value&gt;cleandb&lt;/param-value&gt;"
                 value="&lt;param-value&gt;${plm.password}&lt;/param-value&gt;">
		</replace>
		<replace file="${tmp}/plm-console-war/WEB-INF/web.xml"
                 token="@xml.init.files.dir@"
                 value="${xml.init.files.dir}">
		</replace>
		<replace file="${tmp}/plm-console-war/WEB-INF/web.xml"
                 token="@PLMVERSION@"
                 value="${plm.version}">
		</replace>
		<replace file="${tmp}/plm-console-war/WEB-INF/web.xml"
                 token="@MODULENAME@"
                 value="PLM">
		</replace>
		<replace file="${tmp}/plm-console-war/WEB-INF/web.xml"
                 token="8080"
                 value="${frontend.port}">
		</replace>
		<replace file="${tmp}/plm-console-war/WEB-INF/web.xml"
                 token="localhost"
                 value="${frontend.host}">
		</replace>
		<replace file="${tmp}/plm-console-war/WEB-INF/web.xml"
                 token="@j2ee.server.name@"
                 value="${as_type}">
		</replace>


		<copy todir="${tmp}/plm-console-war" >
			<fileset dir="${basedir}/install/reports"/>
		</copy>

		<copy todir="${tmp}/plm-console-war" file="${basedir}/install/reports/thirdparty-report.html"/>

		<antcall target="plm-console-war-jboss"/>

		<zip destfile="${ear}/plm-console.war" basedir="${tmp}/plm-console-war" />
	</target>

	<target name="plm-console-war-jboss" if="jboss_type" description="Perform specific action for plm-console-war target">
		<delete file="${tmp}/plm-console-war/WEB-INF/classes/com/lectra/plm/console/Log4jInitServlet.class" />
		<delete file="${tmp}/plm-console-war/WEB-INF/classes/com/lectra/plm/console/PDMRepositorySelector.class" />
	</target>
	
	<target name="lectra-conf-jar" depends="init" description="Modification of lectra-conf.jar">
		<echo>+--------------------------------------------------------------------+</echo>
		<echo>|                                                                    |</echo>
		<echo>| lectra-conf                                                        |</echo>
		<echo>|                                                                    |</echo>
		<echo>+--------------------------------------------------------------------+</echo>
		<mkdir dir="${tmp}/lectra-conf"/>
		<copy todir="${tmp}/lectra-conf">
			<fileset dir="${basedir}/install/lectra-conf/core">
				<include name="*.*"/>
			</fileset>
			<fileset dir="${basedir}/install/lectra-conf/${as_type}">
				<include name="*.*"/>
			</fileset>
			<filterset>
				<filter token="APPSERVER" value="${as_type}" />
				<filter token="DATABASE" value="${db_type}" />
				<filter token="PDMVERSION" value="${plm.version}" />
			</filterset>
		</copy>
		<replace dir="${tmp}/lectra-conf">
			<include name="enterprise-services.xml"/>
			<replacefilter token="{FM_REPOSITORY_LOCATION}" value="${filemanager.repository.path}"/>
			<replacefilter token="{HOST_NAME}" value="${frontend.host}"/>
			<replacefilter token="{PORT_NUMBER}" value="${frontend.port}"/>
			<replacefilter token="{CONTENT_ENABLE_EXTRACTION}" value="${operator.extraction}"/>
			<replacefilter token="{OPERATOR_SERVICE_URL}" value="http://${operator.host}/OperatorServices"/>
		</replace>

		<mkdir dir="${tmp}/lectra-conf/META-INF"/>
		<manifest file="${tmp}/lectra-conf/META-INF/MANIFEST.MF">
			<section name="${ant.project.name}">
				<attribute name="Specification-Title" value="PLM Fashion Product Management" />
				<attribute name="Specification-Version" value="${plm.version}" />
				<attribute name="Implementation-Date" value="${NOW}" />
			</section>
		</manifest>


		<antcall target="lectra-conf-jar-jboss"/>
		<antcall target="lectra-conf-jar-weblogic"/>
		<antcall target="lectra-conf-jar-websphere"/>
		
		<antcall target="esc-management"/>
	
		<zip destfile="${ear}/lectra-conf.jar" basedir="${tmp}/lectra-conf" />
	</target>

	<target name="lectra-conf-jar-jboss"  if="jboss_type">
		<delete file="${tmp}/lectra-conf/log4j.xml"/>
		<delete file="${tmp}/lectra-conf/log4j.dtd"/>
	</target>
	
	<target name="lectra-conf-jar-websphere"  if="websphere_type">
		<antcall target="monitor-management-lectraconf"/>
		<delete file="${tmp}/lectra-conf/treecache.xml"/>
		<delete file="${tmp}/lectra-conf/ehcache.xml"/>
	</target>

	<target name="lectra-conf-jar-weblogic"  if="weblogic_type">
		<antcall target="monitor-management-lectraconf"/>
		<delete file="${tmp}/lectra-conf/treecache.xml"/>
		<delete file="${tmp}/lectra-conf/ehcache.xml"/>		
	</target>

	<target name="datasource" description="manage datasource">
		<echo>+--------------------------------------------------------------------+</echo>
		<echo>|                                                                    |</echo>
		<echo>| datasource                                                         |</echo>
		<echo>|                                                                    |</echo>
		<echo>+--------------------------------------------------------------------+</echo>

		<antcall target="datasource-jboss"/>
	</target>

	<target name="datasource-jboss" if="jboss_type">
		<mkdir dir="${tmp}/ds"/>
		<copy file="${basedir}/install/ds/jboss/${db_type}-ds.xml" tofile="${tmp}/ds/pdm-ds.xml">
			<filterset>
				<filter token="JNDINAME" value="${ds.enterprise.jndiname}" />
				<filter token="HOST" value="${db.host}" />
				<filter token="PORT" value="${db.port}" />
				<filter token="NAME" value="${db.name}" />
				<filter token="USERNAME" value="${db.username}" />
				<filter token="PASSWORD" value="${db.password}" />
			</filterset>
		</copy>
	</target>

	<target name="copy-packages" depends="init" description="copy the installed files">
		<echo>+--------------------------------------------------------------------+</echo>
		<echo>|                                                                    |</echo>
		<echo>| copy-packages                                                      |</echo>
		<echo>|                                                                    |</echo>
		<echo>+--------------------------------------------------------------------+</echo>
		<mkdir dir="${install_dir}"/>
		<mkdir dir="${install_dir}/archives"/>
		<mkdir dir="${install_dir}/resources"/>
		<mkdir dir="${install_dir}/scripts"/>
		<mkdir dir="${install_dir}/bin"/>
		<mkdir dir="${install_dir}/extra-libs"/>

		<copy file="${tmp}/pdm-${db_type}.ear" todir="${install_dir}/archives"/>
		
		<copy todir="${install_dir}/extra-libs" flatten="yes">
			<fileset dir="${basedir}/install/libs/core/${jdbc.dir}"/>
			<fileset dir="${basedir}/install/libs/core" includes="plmmonitor-client.jar"/>
		</copy>
		<copy todir="${install_dir}/resources" >
			<fileset dir="${basedir}/install/libs/core">
				<include name="enterprise-examples-cbr.zip"/>
			</fileset>
			<fileset dir="${basedir}/install/resources/core">
				<include name="EnvItemCurrency.html"/>
			</fileset>
		</copy>

		<antcall target="copy-packages-jboss"/>
		<antcall target="copy-packages-websphere"/>
		<antcall target="copy-packages-weblogic"/>
	</target>

	<target name="copy-packages-jboss" if="jboss_type">
		<copy todir="${install_dir}/bin" >
			<fileset dir="${basedir}/install/bin/jboss"/>
			<filterset>
				<filter token="DATABASE" value="${db_type}" />
				<filter token="INSTALL_DIRECTORY" value="${install_dir}" />
				<filter token="AS_HOME" value="${as_home}" />
				<filter token="JBOSS_INSTANCE" value="PLM-${plm.version}"/>
				<filter token="JBOSS_HOME" value="${as_home}"/>
			</filterset>
		</copy>
		<copy todir="${install_dir}/resources" >
			<fileset dir="${basedir}/install/resources/jboss">
			</fileset>
			<fileset file="${basedir}/install/lectra-conf/core/log4j.dtd"/>
			<fileset file="${basedir}/install/lectra-conf/jboss/log4j.xml"/>
			<fileset dir="${tmp}/ds" />
			<filterset>
				<filter token="APPSERVER" value="${as_type}" />
				<filter token="DATABASE" value="${db_type}" />
				<filter token="PDMVERSION" value="${plm.version}" />
			</filterset>
		</copy>
		<copy todir="${install_dir}/extra-libs">
			<fileset file="${basedir}/install/libs/core/commons-logging.jar"/>
			<fileset dir="${basedir}/install/libs/jboss">
				<include name="*.jar"/>
				<exclude name="jbossall-client.jar"/>
			</fileset>
		</copy>
		<replace file="${install_dir}/resources/enterprisequeues-service.xml"
		         token="{SERVER_MAIL_SMTP}"
				 value="${smtp.host}"/>
		<antcall target="monitor-management-resources"/>
	</target>

	<target name="copy-packages-websphere" if="websphere_type">
		<copy todir="${install_dir}/scripts" >
			<fileset dir="${basedir}/install/scripts/websphere">
				<exclude name="*.jacl"/>
			</fileset>
			<fileset dir="${basedir}/install/scripts/websphere">
				<include name="galleryNR.jacl"/>
				<include name="resource_scripts.jacl"/>
			</fileset>
		</copy>
		<copy todir="${install_dir}/bin" >
			<fileset dir="${basedir}/install/bin/websphere">
			</fileset>
		</copy>
		
		<copy todir="${install_dir}/extra-libs">
			<fileset dir="${basedir}/install/libs/websphere">
				<include name="*.jar"/>
			</fileset>
		</copy>

		<!-- change in bat files -->
		<replace file="${install_dir}/bin/config.bat"
                 token="@install.dir@"
                 value="${install_dir}">
		</replace>
		<replace file="${install_dir}/bin/config.bat"
                 token="@webspherehome@"
                 value="${as_home}">
		</replace>
		<replace file="${install_dir}/bin/config.bat"
                 token="@database@"
                 value="${db_type}">
		</replace>
		<replace file="${install_dir}/bin/config.sh"
                 token="@install.dir@"
                 value="${install_dir}">
		</replace>
		<replace file="${install_dir}/bin/config.sh"
                 token="@webspherehome@"
                 value="${as_home}">
		</replace>
		<replace file="${install_dir}/bin/config.sh"
                 token="@database@"
                 value="${db_type}">
		</replace>
		<replace file="${install_dir}/bin/config-cluster.bat"
                 token="@install.dir@"
                 value="${install_dir}">
		</replace>
		<replace file="${install_dir}/bin/config-cluster.bat"
                 token="@webspherehome@"
                 value="${as_home}">
		</replace>
		<replace file="${install_dir}/bin/config-cluster.bat"
                 token="@database@"
                 value="${db_type}">
		</replace>
		<replace file="${install_dir}/bin/config-cluster.sh"
                 token="@install.dir@"
                 value="${install_dir}">
		</replace>
		<replace file="${install_dir}/bin/config-cluster.sh"
                 token="@webspherehome@"
                 value="${as_home}">
		</replace>
		<replace file="${install_dir}/bin/config-cluster.sh"
                 token="@database@"
                 value="${db_type}">
		</replace>

		<replace file="${install_dir}/bin/unconfig.bat"
                 token="@install.dir@"
                 value="${install_dir}">
		</replace>
		<replace file="${install_dir}/bin/unconfig.bat"
                 token="@webspherehome@"
                 value="${as_home}">
		</replace>
		<replace file="${install_dir}/bin/unconfig.bat"
                 token="@database@"
                 value="${db_type}">
		</replace>
		<replace file="${install_dir}/bin/unconfig.sh"
                 token="@install.dir@"
                 value="${install_dir}">
		</replace>
		<replace file="${install_dir}/bin/unconfig.sh"
                 token="@webspherehome@"
                 value="${as_home}">
		</replace>
		<replace file="${install_dir}/bin/unconfig.sh"
                 token="@database@"
                 value="${db_type}">
		</replace>
		<replace file="${install_dir}/bin/unconfig-cluster.bat"
                 token="@install.dir@"
                 value="${install_dir}">
		</replace>
		<replace file="${install_dir}/bin/unconfig-cluster.bat"
                 token="@webspherehome@"
                 value="${as_home}">
		</replace>
		<replace file="${install_dir}/bin/unconfig-cluster.bat"
                 token="@database@"
                 value="${db_type}">
		</replace>
		<replace file="${install_dir}/bin/unconfig-cluster.sh"
                 token="@install.dir@"
                 value="${install_dir}">
		</replace>
		<replace file="${install_dir}/bin/unconfig-cluster.sh"
                 token="@webspherehome@"
                 value="${as_home}">
		</replace>
		<replace file="${install_dir}/bin/unconfig-cluster.sh"
                 token="@database@"
                 value="${db_type}">
		</replace>

		<!-- TCl script file -->
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@install.dir@"
                 value="${install_dir}">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@DATABASE_PORT@"
                 value="${db.port}">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@DATABASE_HOST@"
                 value="${db.host}">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@DATABASE_USER@"
                 value="${db.username}">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@DATABASE_PASSWORD@"
                 value="${db.password}">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@DATABASE_NAME@"
                 value="${db.name}">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@APP_SHORT_NAME@"
                 value="pdm">
		</replace>

		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@PS.CACHE.SIZE@"
                 value="50">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@DATASOURCE.MAX.CONNECTION@"
                 value="20">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@DATASOURCE.MIN.CONNECTION@"
                 value="5">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@CLUSTER.INSTALL@"
                 value="no">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@SILENT.INSTALL@"
                 value="false">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@DataSourceConfig@"
                 value="true">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@JMSResourcesConfig@"
                 value="true">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@MailResourcesConfig@"
                 value="true">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@smtp.host@"
                 value="${smtp.host}">
		</replace>
		<replace file="${install_dir}/scripts/galleryNR.jacl"
                 token="@EAR_NAME@"
                 value="pdm-${db_type}.jar">
		</replace>
	</target>

	<target name="create-repair-kit">
		<echo>+--------------------------------------------------------------------+</echo>
		<echo>|                                                                    |</echo>
		<echo>| create-repair-kit                                                  |</echo>
		<echo>|                                                                    |</echo>
		<echo>+--------------------------------------------------------------------+</echo>
		<mkdir dir="${tmp}/repair"/>

		<antcall target="unzip_console"/>
		<antcall target="unzip_installer"/>

		<copy file="${tmp}/repair/antinstall-config-repair.xml" tofile="${tmp}/repair/antinstall-config.xml" overwrite="true"/>

		<!-- replace default values in ant-install-config-->
		<replace file="${tmp}/repair/antinstall-config.xml" token="PLM Installer" value="PLM Repair Kit"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@INSTALL_DEST@" value="${install_dir}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@INSTALL_DEST_WIN@" value="${install_dir}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@AS_TYPE@" value="${as_type}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@AS_HOME@" value="${as_home}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@AS_HOME_WIN@" value="${as_home}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@FRONTEND_HOST@" value="${frontend.host}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@FRONTEND_PORT@" value="${frontend.port}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@RMIC_URL@" value="${rmic.url}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@ESC_ENABLE@" value="${esc_enable}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@ESC_JNDI_URL@" value="${esc_jndi_url}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@DB_TYPE@" value="${db_type}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@DB_HOST@" value="${db.host}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@DB_PORT@" value="${db.port}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@DB_NAME@" value="${db.name}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@DB_USERNAME@" value="${db.username}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@DB_PASSWORD@" value="${db.password}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@FM_PATH@" value="${filemanager.repository.path}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@FM_PATH_WIN@" value="${filemanager.repository.path}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@OPERATOR_EXTRACTION@" value="${operator.extraction}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@OPERATOR_HOST@" value="${operator.host}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@SMTP_HOST@" value="${smtp.host}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@PLM_LOGIN@" value="${plm.login}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@PLM_PASSWORD@" value="${plm.password}"/>
		<replace file="${tmp}/repair/antinstall-config.xml" token="@FLEXLM_PATH@" value="${license.path.server}"/>

		<replaceregexp file="${tmp}/repair/build.properties"
		               match="repair=.*"
		               replace="repair=true"
		               byline="true"/>
		
		<buildnumber file="${tmp}/repair/install/${number_file}"/>

		<property name="new_jar_name" value="plm-repair-kit-${TODAY}-${build.number}.jar"/>

		<replaceregexp file="${tmp}/repair/build.properties"
				       match="jar_name=.*"
				       replace="jar_name=${new_jar_name}"
				       byline="true"/>
				       
		<antcall target="create-repairkit-weblogic"/>
		
		<jar file="${install_dir}/${new_jar_name}" basedir="${tmp}/repair" manifest="${basedir}/install/MANIFEST.MF"/>
	</target>
	
	<target name="unzip_console" if="build_console">
		<unjar dest="${tmp}/repair" src="${user.dir}/build/archives/${jar_name}"/>
		<copy file="${tmp}/repair/META-INF/MANIFEST.MF" todir="${basedir}/install"/>
		<delete file="${tmp}/repair/META-INF/MANIFEST.MF"/>
	</target>
	
	<target name="unzip_installer" unless="build_console">
		<copy todir="${tmp}/repair">
			<fileset dir="${basedir}">
				<exclude name="install-tmp/**"/>
			</fileset>
		</copy>
	</target>

	<!-- Weblogic related targets -->
	<target name="create-repairkit-weblogic" if="weblogic_type">
		<replace file="${install_dir}/scripts/build.properties" token="@REPAIRKIT_NAME@" value="${new_jar_name}"/>
	</target>
	
	<target name="init-weblogic" if="weblogic_type"  description="Performs init checks/variable settings before continuing">
	    <property name="app.domain.name" value="PDM_DOMAIN"/>
		<property name="archive.path" location="${install_dir}/archives/pdm-${db_type}.ear"/>	
    	<property name="app.domain.path" location="${install_dir}/${app.domain.name}"/>
    	<property name="app.domain.lib.path" location="${install_dir}/${app.domain.name}/lib"/>
    	<property name="frontend.ssl.port" value="7002"/>
    	<property name="pool.minsize" value="0"/>
    	<property name="pool.maxsize" value="20"/>
    	<property name="pool.timeout" value="120"/>
    	<property name="tm.timeout" value="120"/>
    	<property name="app.name" value="PLM Lectra Fashion Suite"/>
	</target>
	
	<target name="ear-weblogic" if="weblogic_type" description="Performs specific operations during weblogic application archive creation">

		<copy file="${basedir}/install/libs/core/enterpriseserver-map-${db_type}-weblogic.jar" tofile="${ear}/enterpriseserver-map.jar" />
		
		<setSecondLevelCache/>
		<copy file="${basedir}/install/libs/core/plm-console-map-${db_type}-weblogic.jar" tofile="${ear}/plm-console-map.jar" />		
		<mkdir dir="${ear}/APP-INF/lib"/>
		<move todir="${ear}/APP-INF/lib">
			<fileset dir="${ear}" includes="*.jar,*.dtd">
				<exclude name="webclient-local.war"/>
				<exclude name="plm-console.war"/>
				<exclude name="plm-console.jar"/>
				<exclude name="fade.war"/>
				<exclude name="interop.war"/>
				<exclude name="enterpriseserver-web.war"/>
				<exclude name="enterpriseserver-ejb.jar"/>
				<!--
				<exclude name="DataAdminTool.war"/>
				<exclude name="SecurityAdminTool.war"/>				
				 -->
			</fileset>
         </move>
	</target>
	
		<macrodef name="weblogic.ejb.description">
			<attribute name="src"/>
			<attribute name="dest"/>
			<sequential>
				<xmltask source="${basedir}/tmp-ejbjar/META-INF/weblogic-ejb-jar.xml">
					<xmlcatalog refid="dtds"/>
					<replace path="weblogic-ejb-jar/weblogic-enterprise-bean/enable-call-by-reference/text()" withText='${call.by.ref.enabled}'/>
				</xmltask>
			</sequential>
		</macrodef>
	
	<target name="webclient-war-weblogic" if="weblogic_type" description="Performs specific operations for flexlm integration">
		<copy todir="${tmp}/webclient-war/WEB-INF/lib">
			<fileset dir="${basedir}/install/libs/core">
				<include name="lectra_flexlm.jar"/>
				<include name="EccpressoAll.jar"/>
			</fileset>
		</copy>
	</target>

	<target name="weblogic-fade-war" if="weblogic_type" description="Performs specific operations for flexlm integration">
		<copy todir="${tmp}/fade-war/WEB-INF/lib">
			<fileset dir="${basedir}/install/libs/core">
				<include name="lectra_flexlm.jar"/>
				<include name="EccpressoAll.jar"/>
			</fileset>
		</copy>	
	</target>
	
	<target name="copy-packages-weblogic" if="weblogic_type" depends="init-weblogic">
		<copy todir="${install_dir}/scripts">
        	<fileset dir="${basedir}/install/scripts/weblogic">
        		<include name="install-single.py"/>
        		<include name="install-cluster.py"/>
        		<include name="startServers.py"/>
        		<include name="stopServers.py"/>
        		<include name="deploy.py"/>
        		<include name="undeploy.py"/>
        		<include name="ressource-${db_type}.py"/>
        	</fileset>
			<filterset>
				<filter token="INSTALL_DIR" value="${install_dir}"/>
				<filter token="DOMAIN_NAME" value="${app.domain.name}"/>
				<filter token="DOMAIN_PATH" value="${app.domain.path}"/>				
				<filter token="DB_PORT" value="${db.port}"/>
				<filter token="DB_HOST" value="${db.host}"/>
				<filter token="DB_USER" value="${db.username}"/>
				<filter token="DB_PASSWORD" value="${db.password}"/>
				<filter token="DB_NAME" value="${db.name}"/>
				<filter token="DB_POOL_MIN_SIZE" value="${pool.minsize}"/>
				<filter token="DB_POOL_MAX_SIZE" value="${pool.maxsize}"/>
				<filter token="DB_POOL_TIMEOUT" value="${pool.timeout}"/>
				<filter token="ARCHIVE_PATH" value="${archive.path}"/>
				<filter token="ARCHIVE_VERSION" value="${plm.version}"/>
				<filter token="APP_NAME" value="${app.name}"/>				
				<filter token="APP_VERSION" value="${plm.version}"/>
				<filter token="HOST_NAME" value="${frontend.host}"/>
				<filter token="HOST_PORT" value="${frontend.port}"/>
				<filter token="HOST_SSL_PORT" value="${frontend.ssl.port}"/>
				<filter token="SMTP_HOST" value="${smtp.host}"/>
				<filter token="POP3_HOST" value="pop3.nosuchhost.nosuchdomain.com"/>
				<filter token="PDM_USER" value="${plm.login}"/>
				<filter token="PDM_PASSWORD" value="${plm.password}"/>				
			</filterset>
        </copy>
        
        <move file="${install_dir}/scripts/ressource-${db_type}.py" tofile="${install_dir}/scripts/ressource.py"/>
        	
		<copy todir="${install_dir}/scripts">
			<fileset dir="${basedir}/install/scripts/weblogic">
				<include name="antinstall-config.xml"/>
				<include name="build.xml"/>
				<include name="build.properties"/>
				<include name="wlsbuild.xml"/>
			</fileset>
			<filterset>
				<filter token="INSTALL_DIR" value="${install_dir}"/>
				<filter token="DOMAIN_NAME" value="${app.domain.name}"/>
				<filter token="ARCHIVE_PATH" value="${archive.path}"/>
				<filter token="ARCHIVE_VERSION" value="${plm.version}"/>
				<filter token="APP_NAME" value="${app.name}"/>				
				<filter token="APP_VERSION" value="${plm.version}"/>
				<filter token="HOST_NAME" value="${frontend.host}"/>
				<filter token="HOST_PORT" value="${frontend.port}"/>
			</filterset>						
		</copy>
		
					
        <copy todir="${install_dir}/bin" includeEmptyDirs="false">
            <fileset dir="${basedir}/install/bin/weblogic">
                <include name="*.bat"/>
				<include name="*.sh"/>
            </fileset>
			<filterset>
				<filter token="WEBLOGIC_HOME" value="${as_home}"/>
				<filter token="INSTALL_DIR" value="${install_dir}"/>
				<filter token="DOMAIN_NAME" value="${app.domain.name}"/>
				<filter token="DEBUG_FLAG" value="false"/>
				<filter token="MONITOR_FLAG" value=""/>					
				<filter token="PRODUCTION_MODE" value="production"/>
								
			</filterset>			
        </copy>	
        
        <copy todir="${install_dir}/extra-libs">
        	<fileset dir="${basedir}/install/libs/weblogic">
        		<include name="*.jar"/>
        	</fileset>
        </copy>	
	</target>		
	<!-- end of weblogic related targets -->
	
	
	<!--  console related targets -->
	<target name="ear-console" if="build-console" depends="cache-console-weblogic,cache-console-websphere,cache-console-jboss" description="console ear specific targets"/>
	
	<target name="cache-console-weblogic" if="weblogic">
			<setSecondLevelCache/>
	</target>
	
	<target name="cache-console-jboss" if="jboss">
			<setSecondLevelCache/>
	</target>
	
	<target name="cache-console-websphere" if="websphere">
			<setSecondLevelCache/>
	</target>
	
	<!--  console related targets -->
	
	<target name="esc-management" if="is_esc_enabled" depends="esc-management-jboss,esc-management-weblogic,esc-management-websphere" description="Set properties for Enterprise Server Connector">
		<echo>+--------------------------------------------------------------------+</echo>
		<echo>|                                                                    |</echo>
		<echo>| esc-management                                                     |</echo>
		<echo>|                                                                    |</echo>
		<echo>+--------------------------------------------------------------------+</echo>
		<copy todir="${tmp}/lectra-conf">
			<fileset dir="${basedir}/install/lectra-conf/core">
				<include name="jmsconnector-config.xml"/>
			</fileset>
		</copy>
		<replace file="${tmp}/lectra-conf/jmsconnector-config.xml" token="@QUEUE_NAME@" value="${esc_queue_name}"/>
        <replace file="${tmp}/lectra-conf/jmsconnector-config.xml" token="@QUEUE_CF@" value="${esc_connection_factory}"/>
        <replace file="${tmp}/lectra-conf/jmsconnector-config.xml" token="@NAMING_FACTORY@" value="${esc_naming_factory}"/>
        <replace file="${tmp}/lectra-conf/jmsconnector-config.xml" token="@REMOTE_URL@" value="${esc_jndi_url}"/>
	</target>
	
	<target name="esc-management-jboss" if="jboss_type">
		<property name="esc_queue_name" value="queue/plm/jmsxml/out/jmsXmlQueue"/>
		<property name="esc_connection_factory" value="UIL2ConnectionFactory"/>
		<property name="esc_naming_factory" value="org.jnp.interfaces.NamingContextFactory"/>
	</target>
	
	<target name="esc-management-websphere" if="websphere_type">
		<property name="esc_queue_name" value="jms/queue/plm/jmsxml/out/jmsXmlQueue"/>
		<property name="esc_connection_factory" value="jms/plmQueueCF"/>
		<property name="esc_naming_factory" value="com.ibm.websphere.naming.WsnInitialContextFactory"/>
	</target>
	
	<target name="esc-management-weblogic" if="weblogic_type">
		<property name="esc_queue_name" value="plm/jmsxml/jmsXmlQueue"/>
		<property name="esc_connection_factory" value="javax/jms/QueueConnectionFactory"/>
		<property name="esc_naming_factory" value="weblogic.jndi.WLInitialContextFactory"/>
	</target>
	
	<target name="monitor-management-lectraconf">
		<echo>+--------------------------------------------------------------------+</echo>
		<echo>|                                                                    |</echo>
		<echo>| monitor-management-lectraconf                                      |</echo>
		<echo>|                                                                    |</echo>
		<echo>+--------------------------------------------------------------------+</echo>
		<replace file="${tmp}/lectra-conf/log4j-config.xml"
		         token="@MONITOR_START@"
		         value="${monitor.start}" />
		<replace file="${tmp}/lectra-conf/log4j-config.xml"
		         token="@MONITOR_END@"
		         value="${monitor.end}" />
		<replace file="${tmp}/lectra-conf/log4j-config.xml"
		         token="@MONITOR_HOST@"
		         value="${monitor.host}" />
		<replace file="${tmp}/lectra-conf/log4j-config.xml"
		         token="@MONITOR_PORT@"
		         value="${monitor.port}" />
	</target>
	
	<target name="monitor-management-resources">
		<echo>+--------------------------------------------------------------------+</echo>
		<echo>|                                                                    |</echo>
		<echo>| monitor-management-resources                                       |</echo>
		<echo>|                                                                    |</echo>
		<echo>+--------------------------------------------------------------------+</echo>
		<replace file="${install_dir}/resources/log4j.xml"
		         token="@MONITOR_START@"
		         value="${monitor.start}" />
		<replace file="${install_dir}/resources/log4j.xml"
		         token="@MONITOR_END@"
		         value="${monitor.end}" />
		<replace file="${install_dir}/resources/log4j.xml"
		         token="@MONITOR_HOST@"
		         value="${monitor.host}" />
		<replace file="${install_dir}/resources/log4j.xml"
		         token="@MONITOR_PORT@"
		         value="${monitor.port}" />
	</target>
	
	<macrodef name="removeClassCacheEntry">
		<attribute name="fqn" description="class cache entry to remove"/>
		<attribute name="source" description="file to work on"/>
		<attribute name="dest" description="result file"/>
		<sequential>
			<echo>+--------------------------------------------------------------------+</echo>
			<echo>|                                                                    |</echo>
			<echo>| Second level cache setter                                          |</echo>
			<echo>|                                                                    |</echo>
			<echo>+--------------------------------------------------------------------+</echo>
			<xmltask source="@{source}" dest="@{dest}" preservetype="true">
				<xmlcatalog refid="dtds"/>
			    	<remove path="//*[local-name()='hibernate-configuration']//*[local-name()='session-factory']//*[local-name()='class-cache'][@class='@{fqn}']"/>
			</xmltask>
		</sequential>
	</macrodef>
	
	<target name="performReplacement" if="needed">
			<echo>performing cache strategy attribute replacement</echo>
			<replace file="${tmp}/cache.xml">
				<replacefilter token="nonstrict-read-write" value="transactional"/>
				<replacefilter token="read-only" value="transactional"/> 
				<replacefilter token="read-write" value="transactional"/> 
			</replace>	
	</target>
	
	<macrodef name="setSecondLevelCache">
		<attribute name="cacheProvider" description="cache provider class" default="org.hibernate.cache.EhCacheProvider"/>
		<sequential>
			<echo>+--------------------------------------------------------------------+</echo>
			<echo>|                                                                    |</echo>
			<echo>| Second level cache setter                                          |</echo>
			<echo>|                                                                    |</echo>
			<echo>+--------------------------------------------------------------------+</echo>
			<tstamp>
				<format property="NOW" pattern="MM/dd/yyyy hh:mm aa"/>
			</tstamp>
			<delete dir="${tmp}/mapping/cache"/>
	
			<unzip src="${ear}/enterpriseserver-map.jar" dest="${tmp}/mapping/cache"/>
			
			<copy file="${basedir}/install/resources/core/cache.xml" todir="${tmp}" overwrite="yes"/>
			
			<condition property="needed" value="true">
					<contains string="@{cacheProvider}" substring="OptimisticTreeCacheProvider"/>
			</condition>
			
			<antcall target="performReplacement"/>	
			
			<replace file="${tmp}/mapping/cache/hibernate.cfg.xml">
				<replacefilter token="org.hibernate.cache.HashtableCacheProvider" value="@{cacheProvider}"/>
				<replacefilter token="org.hibernate.cache.EhCacheProvider" value="@{cacheProvider}"/>
				<replacefilter token="org.hibernate.cache.OptimisticTreeCacheProvider" value="@{cacheProvider}"/>			
			</replace>			
			
			<xmltask source="${tmp}/mapping/cache/hibernate.cfg.xml" dest="${tmp}/mapping/cache/hibernate.cfg.xml" preservetype="true">
				<xmlcatalog refid="dtds"/>
			    	<insert path="//*[local-name()='hibernate-configuration']//*[local-name()='session-factory']//*[local-name()='mapping'][last()]" position="after" file="${tmp}/cache.xml"/>
			</xmltask>
			
			<delete file="${ear}/enterpriseserver-map.jar"/>
			<jar destfile="${ear}/enterpriseserver-map.jar" >
				<manifest>
					<attribute name="Build-By" value="${user.name}" />
					<section name="${ant.project.name}">
						<attribute name="Specification-Title" value="${title}" />
						<attribute name="Specification-Version" value="${build.version}" />
						<attribute name="Implementation-Date" value="${NOW}" />
					</section>
				</manifest>			
				<fileset dir="${tmp}/mapping/cache">
					<include name="**/*.class"/>
					<include name="**/*.xml"/>
				</fileset>
			</jar>
		</sequential>
	</macrodef>
	
	<macrodef name="setTmLookupClass">
		<attribute name="from"/>
		<attribute name="to"/>
		<sequential>
			<echo>+--------------------------------------------------------------------+</echo>
			<echo>|                                                                    |</echo>
			<echo>| Transaction manager lookup class switcher                          |</echo>
			<echo>|                                                                    |</echo>
			<echo>+--------------------------------------------------------------------+</echo>
		<tstamp>
			<format property="NOW" pattern="MM/dd/yyyy hh:mm aa"/>
		</tstamp>
		<delete dir="${tmp}/mapping/cache"/>

		<unzip src="${ear}/enterpriseserver-map.jar" dest="${tmp}/mapping/cache"/>
		<replace dir="${tmp}/mapping/cache">	
			<include name="hibernate.cfg.xml"/>
			<replacefilter token="@{from}" value="@{to}"/>
		</replace>
			
		<delete file="${ear}/enterpriseserver-map.jar"/>
		<jar destfile="${ear}/enterpriseserver-map.jar" >
			<manifest>
				<attribute name="Build-By" value="${user.name}" />
				<section name="${ant.project.name}">
					<attribute name="Specification-Title" value="${title}" />
					<attribute name="Specification-Version" value="${build.version}" />
					<attribute name="Implementation-Date" value="${NOW}" />
				</section>
			</manifest>			
			<fileset dir="${tmp}/mapping/cache">
				<include name="**/*.class"/>
				<include name="**/*.xml"/>
			</fileset>
		</jar>				
		</sequential>
	</macrodef>
	
	<target name="osformat">
		<fixcrlf srcdir="${install_dir}/bin"
				 includes="*.sh"
				 eol="unix">
		</fixcrlf>
		<chmod perm="a+x" >
		 	<fileset dir="${install_dir}/bin" includes="*.sh"/>
		</chmod>
		<fixcrlf srcdir="${install_dir}/bin"
				 includes="*.bat"
				 eol="dos">
		</fixcrlf>
	</target>		
	
</project>
